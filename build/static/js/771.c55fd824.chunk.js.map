{"version":3,"file":"static/js/771.c55fd824.chunk.js","mappings":"2OAOe,SAASA,IACtB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,MACZC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GACjCG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,UACXC,GAAcD,EAAAA,EAAAA,UACdE,GAAqBF,EAAAA,EAAAA,WACrB,EAAEG,EAAC,KAAEC,IAASC,EAAAA,EAAAA,MAqBpB,OACEC,EAAAA,EAAAA,MAAA,WAASC,UAAU,SAAQC,SAAA,EACzBC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,UACHF,EAAAA,EAAAA,MAACI,EAAAA,EAAKC,KAAI,CAAAH,SAAA,EACRC,EAAAA,EAAAA,KAAA,UACEG,QAASA,KACPf,EAAS,IAAI,EAEfU,UAAU,kBAAiBC,SAC5B,UAGDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,SAAEL,EAAE,aACnCX,IACCiB,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CAACN,UAAU,cAAcO,QAAQ,SAAQN,SAC5C,KAAOhB,KAGZc,EAAAA,EAAAA,MAACS,EAAAA,EAAI,CAACC,SArCOC,UAInB,GAFAC,EAAEC,iBAEElB,EAAYmB,QAAQC,QAAUnB,EAAmBkB,QAAQC,MAC3D,OAAO5B,EAAS,2BAGlB,IACEA,EAAS,IACTG,GAAW,SACLN,EAAOS,EAASqB,QAAQC,MAAOpB,EAAYmB,QAAQC,OACzDxB,EAAS,IACX,CAAE,MAAOL,GACPC,EAAS,+BAAiCD,EAC5C,CACAI,GAAW,EAAM,EAqBkBY,SAAA,EAC3BF,EAAAA,EAAAA,MAACS,EAAAA,EAAKO,MAAK,CAAAd,SAAA,EACTC,EAAAA,EAAAA,KAACM,EAAAA,EAAKQ,MAAK,CAACC,QAAQ,QAAOhB,SAAEL,EAAE,YAC/BM,EAAAA,EAAAA,KAACM,EAAAA,EAAKU,QAAO,CAACC,KAAK,QAAQC,GAAG,QAAQC,IAAK7B,QAE7CO,EAAAA,EAAAA,MAACS,EAAAA,EAAKO,MAAK,CAAAd,SAAA,EACTC,EAAAA,EAAAA,KAACM,EAAAA,EAAKQ,MAAK,CAACC,QAAQ,WAAUhB,SAAEL,EAAE,eAClCM,EAAAA,EAAAA,KAACM,EAAAA,EAAKU,QAAO,CAACC,KAAK,WAAWC,GAAG,WAAWC,IAAK3B,QAEnDK,EAAAA,EAAAA,MAACS,EAAAA,EAAKO,MAAK,CAAAd,SAAA,EACTC,EAAAA,EAAAA,KAACM,EAAAA,EAAKQ,MAAK,CAACC,QAAQ,mBAAkBhB,SACnCL,EAAE,uBAELM,EAAAA,EAAAA,KAACM,EAAAA,EAAKU,QAAO,CACXC,KAAK,WACLC,GAAG,mBACHC,IAAK1B,QAGTO,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CACLtB,UAAU,aACVO,QAAQ,UACRY,KAAK,SACLI,SAAUnC,EAAQa,SAEjBL,EAAE,sBAKXG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,CACxCL,EAAE,4BACHM,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,GAAG,SAAQxB,SAAEL,EAAE,gBAI7B,C","sources":["components/Signup.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Header from \"../views/header/Header\";\r\nimport \"./signup.css\";\r\nexport default function Signup() {\r\n  const { signup } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const handleSubmit = async (e) => {\r\n    // you should make it first task to work\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match \");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordRef.current.value);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      setError(\"Failed to create an account.\" + error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup\">\r\n      <Card>\r\n        <Card.Body>\r\n          <button\r\n            onClick={() => {\r\n              navigate(\"/\");\r\n            }}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            home\r\n          </button>\r\n          <h2 className=\"text-center mb-4\">{t(\"sign up\")}</h2>\r\n          {error && (\r\n            <Alert className=\"text-center\" variant=\"danger\">\r\n              {\"* \" + error}\r\n            </Alert>\r\n          )}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"email\">{t(\"email\")}</Form.Label>\r\n              <Form.Control type=\"email\" id=\"email\" ref={emailRef} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"password\">{t(\"password\")}</Form.Label>\r\n              <Form.Control type=\"password\" id=\"password\" ref={passwordRef} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"password-confirm\">\r\n                {t(\"password confirm\")}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                id=\"password-confirm\"\r\n                ref={passwordConfirmRef}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              className=\"w-100 mt-3\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n            >\r\n              {t(\"sign up\")}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2 ask\">\r\n        {t(\"aleardy have an account\")}\r\n        <Link to=\"/login\">{t(\"login\")}</Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["Signup","signup","useAuth","error","setError","useState","loading","setLoading","navigate","useNavigate","emailRef","useRef","passwordRef","passwordConfirmRef","t","i18n","useTranslation","_jsxs","className","children","_jsx","Card","Body","onClick","Alert","variant","Form","onSubmit","async","e","preventDefault","current","value","Group","Label","htmlFor","Control","type","id","ref","Button","disabled","Link","to"],"sourceRoot":""}